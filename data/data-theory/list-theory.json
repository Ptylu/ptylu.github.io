[
  {
     "Theory-ID":"0",
     "Title":"Processes",
     "Type":"Forensic",
     "OS":"Windows",
     "Comment":"N/A",
     "Location":"N/A",
     "Definition":"All process below are present in \"C:\\Windows\\System32\\\", except for System (No path because not generated by an image of an executable) and explorer.exe \"C:\\Windows\" -- SYSTEM: Responsible for most of the Ring 0 threads. The modules that are launched by the system.exe are mainly the drivers (.sys) as well as some DLLs for the kernel executable (ntoskrnl.exe). - Parent Process: N/A. - Instance Number: 1 (Boot). - User: Local System -- SMSS.EXE: Session Manager Process is responsible for creating new sessions. The first instance will then create the next children for each session. Smss.exe child will initialize the session by running csrss.exe (for all sessions) and wininit.exe (for session 0) or winlogon.exe (for session 1+). Finally the child instance smss.exe terminates. Session 0 = services, Session 1 = local console, Session 2+ = Remote Desktop or Fast User Switching (switching accounts without logging out or closing running applications) - Parent Process: System - Instance Number: 1 master instance (a few seconds after boot) then 1 child instance per session. The child instance ends after the creation of the new session - User: Local System -- CSRSS.EXE: Client /Server Run-Time Subsystem is the ring 3 process for the Windows subsystem. Role is to manage the processes / threads, import many DLL and facilitate the shutdown of the GUI when shutting down Windows - Prent Process: Created by smss.exe terminating instance (often no Parent Process Name during forensic analyse). - Instance Number:2 (session 0 & session 1 a few seconds after boot) or more. - User: Local System. -- WININIT.EXE: Starts important processes that will exist in the background (will use the wininit.ini file). Services.exe, lsass.exe or lsaiso.exe are launched by wininit.exe - Prent Process: Created by smss.exe terminating instance (often no Parent Process Name during forensic analyse). - Instance Number:1 (from session 0, a few seconds after boot). - User: Local System. -- WINLOGON.EXE: Handles interactive logon and logoff and launches logonUI.exe which retrieves the user's credentials to submit them to lsass.exe for validation. When user is authenticated, winlogon.exe loads NTUSER.DAT in HKCU and launches explorer.exe via userinit.exe - Prent Process:Created by smss.exe terminating instance (often no Parent Process Name during forensic analyse). - Instance Number: After boot for session 1, otherwise after creating an additional session. - User: Local System.",
     "Forensic-Tool":"",
     "Example":"THR-0-2022-09-13_13-53.png"
  },
   {
      "Theory-ID":"1",
      "Title":"Prefetch",
      "Type":"Forensic",
      "OS":"Windows",
      "Comment":"N/A",
      "Location":"C:\\Windows\\Prefetch\\",
      "Definition":"Prefetch is used by Windows to accelerate .exe by saving .dll paths. Preftech file name is the executable name + executable path hash \"PING.EXE-B29F6629.pf\". 1 Prefetch file by executable (Exeption for svchost.exe & dllhost.exe). {IN} - Prefetch is not enabled by default on Windows server. To enable Prefetch, \"Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\PrefetchParameters\" set \"EnablePrefetcher\" to \"3\" - Even if executable crashs, a prefetch can be created - \"Creation Time\" can have 10s latency - Prefetch folder is limited to 128 Prefetch file for Windows 7 and 1024 Prefetch file for Windows 8-10. - Old Prefetch can be overwritten - Multiple svchost.exe & dllhost.exe Prefetch file because Prefetch uses the command for the Hash calculation{IN} {ID} - Attacker may set a 10s sleep to avoid the DLL's prefetch recording {ID} {IS} - If the prefetch is deleted from the folder, then recreated after the same binary is run, then the macB date remains the same as when it was first run. The MAcb dates will be those of the last launch of the binary {D}. {IS}",
      "Forensic-Tool":"PECMD.exe (https://github.com/EricZimmerman/PECmd) - Hot Analysis command example: \"PECmd.exe -f C:\\Windows\\Prefetch\\CMD.EXE-8E75B5BB.pf\" - Cold Analysis command example \"PECmd.exe -d C:\\Windows\\Prefetch\\ --csv dfir_out --csvf prefetch_to_analyse.csv --vss --mp -q\"",
      "Example":"{A} 1 prefetch file by .exe. Here prefetch for C:\\Windows\\SysWOW64\\ping.exe and C:\\Windows\\System32\\ping.exe. 2022-09-07_22-28.png #C:\\Windows\\SysWOW64\\ping.exe and C:\\Windows\\System32\\ping.exe# {B} Special Prefect behavior for svchost.exe & dllhost.exe. Prefetch uses the path+command to calculate the hash. 2022-09-07_22-34.png #dllhost.exe# 2022-09-07_22-39.png #svchost.exe# {C} With MAcB time, we can detect if executable has been launched for the first time (3 same dates) for \"PING.EXE-6B29C0CD.pf\" or has already been executed more than once (Date Created is not the same) for execution for \"PING.EXE-B29F6629.pf\" 2022-09-07_22-51.png #Only 1 execution for PING.EXE-B29F6629.pf# {D} Note Forensic: Below with the analysis of the Prefetch File, we can see the Executable has been launched only once, which is not possible because if it has been launched only once, the MAcB dates should be the same. This is an indicator of Prefetch File Deletion 2022-09-13_13-22.png #With the Creation Date analysis, we can see the Ping Preffetch File was deleted#"
   },
   {
     "Theory-ID":"2",
     "Title":"MACB Time",
     "Type":"Forensic",
     "OS":"Windows",
     "Comment":"",
     "Definition":"",
     "Example":""
   }
]
